(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{410:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"为什么要搭建本地服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要搭建本地服务器"}},[t._v("#")]),t._v(" 为什么要搭建本地服务器？")]),t._v(" "),a("ul",[a("li",[t._v("目前我们开发的代码，为了运行需要有两个操作：\n"),a("ul",[a("li",[t._v("操作一："),a("strong",[t._v("npm run build")]),t._v("，编译相关的代码；")]),t._v(" "),a("li",[t._v("操作二：通过"),a("strong",[t._v("live server")]),t._v("或者直接通过浏览器，打开 index.html 代码，查看效果；")])])]),t._v(" "),a("li",[t._v("这个过程经常操作会影响我们的开发效率，我们希望可以做到，当文件发生变化时，可以自动的完成 编译 和 展示；")]),t._v(" "),a("li",[t._v("为了完成自动编译，webpack 提供了几种可选的方式：\n"),a("ul",[a("li",[t._v("webpack watch mode；")]),t._v(" "),a("li",[t._v("webpack-dev-server（常用）；")]),t._v(" "),a("li",[t._v("webpack-dev-middleware；")])])])]),t._v(" "),a("h2",{attrs:{id:"webpack-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-watch"}},[t._v("#")]),t._v(" Webpack watch")]),t._v(" "),a("ul",[a("li",[t._v("webpack 给我们提供了 watch 模式：\n"),a("ul",[a("li",[t._v("在该模式下，webpack 依赖图中的所有文件，只要有一个"),a("strong",[t._v("发生了更新")]),t._v("，那么代码将"),a("strong",[t._v("被重新编译")]),t._v("；")]),t._v(" "),a("li",[t._v("我们"),a("strong",[t._v("不需要手动")]),t._v("去运行 npm run build 指令了；")])])]),t._v(" "),a("li",[t._v("如何开启 watch 呢？两种方式：\n"),a("ul",[a("li",[t._v("方式一：在导出的配置中，添加 watch: true；")]),t._v(" "),a("li",[t._v("方式二：在启动 webpack 的命令中，添加 --watch 的标识；")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("wathc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"watch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --watch"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h2",{attrs:{id:"webpack-dev-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server"}},[t._v("#")]),t._v(" webpack-dev-server")]),t._v(" "),a("ul",[a("li",[t._v("上面的方式可以监听到文件的变化，但是事实上它本身是没有自动刷新浏览器的功能的：\n"),a("ul",[a("li",[t._v("当然，目前我们可以在 VSCode 中使用 live-server 来完成这样的功能；")]),t._v(" "),a("li",[t._v("但是，我们希望在"),a("strong",[t._v("不使用 live-server")]),t._v("的情况下，可以具备"),a("strong",[t._v("live reloading（实时重新加载")]),t._v("）的功能；")])])]),t._v(" "),a("li",[t._v("安装 webpack-dev-server")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" webpack-dev-server -D\n")])])]),a("ul",[a("li",[t._v("添加 script 脚本配置")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack serve"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/frontEnd/pack/webpack/33.png",alt:""}})]),t._v(" "),a("p",[t._v("这里的意思是如果我们使用了 webpack-dev-server,因为它这里面会自动箭头 watch 的变化,所以在配置里面就不需要配置 watch 了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// watch: true,")]),t._v("\n")])])]),a("ul",[a("li",[t._v("修改配置文件，告知 dev server，从什么位置查找文件：")])]),t._v(" "),a("p",[t._v("我们以前不是配置了 CopyWebpackPlugin 的插件吗,如果我们不想配置这个插件,而且想使用 public 文件夹中的文件的话")]),t._v(" "),a("p",[t._v("那么就可以对 devServer 进行配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new CopyWebpackPlugin({")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   patterns: [")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//       from: "public",')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//       globOptions: {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         ignore: [")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//           "**/index.html"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         ]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//       }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   ]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }),")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有些资源不是从webpac中得到服务的话就会从这里进行加载")]),t._v("\n  contentBase"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/public'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/frontEnd/pack/webpack/34.png",alt:""}})]),t._v(" "),a("p",[t._v("我画了一个很草率的图来说明 CopyWebpackPlugin 和 content 的差别")]),t._v(" "),a("p",[a("img",{attrs:{src:"/frontEnd/pack/webpack/35.png",alt:""}})]),t._v(" "),a("p",[t._v("那是不是就表明这个 CopyWebpackPlugin 的插件就没有用了喃?")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当然不是的,一般情况下在开发阶段我们使用 contentBase,生产阶段我们使用 CopyWebpackPlugin 插件")])]),t._v(" "),a("li",[a("p",[t._v("因为开发阶段如果我们想拷贝的资源很大(比如 10Gb 的 mp4 文件),这个时候如果我们用 CopyWebpackPlugin 插件,表示我们每次打包之后的资源就很变得很大,我们在加载代码的时候有些时候就会加载不到资源,这个时候就可以使用 contentBase")])]),t._v(" "),a("li",[a("p",[t._v("在上线阶段,因为我们最终部署的时候是把代码部署到一个服务器上的,所以要把所有的资源打包到一个地方,所以就用 CopyWebpackPlugin")])]),t._v(" "),a("li",[a("p",[t._v("webpack-dev-server 在编译之后"),a("strong",[t._v("不会写入到任何输出文件")]),t._v("，而是将 bundle 文件"),a("strong",[t._v("保留在内存")]),t._v("中：")]),t._v(" "),a("ul",[a("li",[t._v("当我们开启本地服务的时候,会对当前项目进行一个打包,打包之后将打包之后的资源先放在内存中,内部是 express 服务器")]),t._v(" "),a("li",[t._v("当我们用 express 来访问之前打包到内存的静态资源,如果浏览器去访问的时候也是从内存中读取资源再返回到浏览器")]),t._v(" "),a("li",[t._v("那为什么不直接输出到文件夹喃?岂不是更干脆")]),t._v(" "),a("li",[t._v("如果用户进行访问,会通过 express 服务器把资源读取到内存里面,再转化为对应的数据流再返回给浏览器")]),t._v(" "),a("li",[t._v("webpack 直接打包到内存中,放在内存中就少了从文件读取到内存的过程,这样提供服务的服务器性能就会更高一点,用户访问的速度就会更快一点")]),t._v(" "),a("li",[t._v("事实上 webpack-dev-server 使用了一个库叫 memfs（以前用的自己写的 memory-fs 库 ）")])])])]),t._v(" "),a("h2",{attrs:{id:"认识模块热替换-hmr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认识模块热替换-hmr"}},[t._v("#")]),t._v(" 认识模块热替换（HMR）")]),t._v(" "),a("ul",[a("li",[t._v("什么是 HMR 呢？\n"),a("ul",[a("li",[t._v("HMR 的全称是"),a("strong",[t._v("Hot Module Replacement")]),t._v("，翻译为"),a("strong",[t._v("模块热替换")]),t._v("；")]),t._v(" "),a("li",[t._v("模块热替换是指在 "),a("strong",[t._v("应用程序运行过程中，替换、添加、删除模块")]),t._v("，而"),a("strong",[t._v("无需重新刷新整个页面")]),t._v("；")])])]),t._v(" "),a("li",[t._v("HMR 通过如下几种方式，来提高开发的速度：\n"),a("ul",[a("li",[a("strong",[t._v("不重新加载整个页面，这样可以保留某些应用程序的状态不丢失")]),t._v("；")]),t._v(" "),a("li",[t._v("只更新"),a("strong",[t._v("需要变化的内容，节省开发的时间")]),t._v("；")]),t._v(" "),a("li",[t._v("修改了"),a("strong",[t._v("css、js 源代码")]),t._v("，会"),a("strong",[t._v("立即在浏览器更新")]),t._v("，相当于直接在浏览器的 devtools 中直接修改样式；")])])]),t._v(" "),a("li",[t._v("如何使用 HMR 呢？\n"),a("ul",[a("li",[t._v("默认情况下，"),a("strong",[t._v("webpack-dev-server 已经支持 HMR")]),t._v("，我们只需要开启即可；")]),t._v(" "),a("li",[t._v("在不开启 HMR 的情况下，当我们修改了源代码之后，整个页面会自动刷新，使用的是 live reloading；")])])])]),t._v(" "),a("h2",{attrs:{id:"开启-hmr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启-hmr"}},[t._v("#")]),t._v(" 开启 HMR")]),t._v(" "),a("ul",[a("li",[t._v("修改 webpack 的配置：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  hot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("ul",[a("li",[t._v("浏览器可以看到如下效果：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/frontEnd/pack/webpack/36.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("但是你会发现，当我们修改了某一个模块的代码时，依然是刷新的整个页面：\n"),a("ul",[a("li",[t._v("这是因为我们需要去指定哪些模块发生更新时，进行 HMR；")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./js/element.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"element文件更新了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"框架的-hmr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架的-hmr"}},[t._v("#")]),t._v(" 框架的 HMR")]),t._v(" "),a("ul",[a("li",[t._v("有一个问题：在开发其他项目时，我们是否需要经常手动去写入 module.hot.accpet 相关的 API 呢？\n"),a("ul",[a("li",[t._v("比如"),a("strong",[t._v("开发 Vue、React 项目")]),t._v("，我们"),a("strong",[t._v("修改了组件")]),t._v("，希望"),a("strong",[t._v("进行热更新")]),t._v("，这个时候"),a("strong",[t._v("应该如何去操作")]),t._v("呢？")]),t._v(" "),a("li",[t._v("事实上社区已经针对这些有很成熟的解决方案了；")]),t._v(" "),a("li",[t._v("比如 vue 开发中，我们使用"),a("strong",[t._v("vue-loader")]),t._v("，此 loader 支持 vue 组件的 HMR，提供开箱即用的体验；")]),t._v(" "),a("li",[t._v("比如 react 开发中，有 React Hot Loader，实时调整 react 组件（目前 React 官方已经弃用了，改成使用"),a("strong",[t._v("reactrefresh")]),t._v("）；")])])])]),t._v(" "),a("h2",{attrs:{id:"hmr-的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmr-的原理"}},[t._v("#")]),t._v(" HMR 的原理")]),t._v(" "),a("ul",[a("li",[t._v("那么 HMR 的原理是什么呢？如何可以做到只更新一个模块中的内容呢？\n"),a("ul",[a("li",[t._v("webpack-dev-server 会创建两个服务：**提供静态资源的服务（express）**和 "),a("strong",[t._v("Socket 服务（net.Socket）")]),t._v("；")]),t._v(" "),a("li",[t._v("express server 负责直接提供"),a("strong",[t._v("静态资源的服务")]),t._v("（打包后的资源直接被浏览器请求和解析）；")])])]),t._v(" "),a("li",[t._v("HMR Socket Server，是一个 socket 的长连接(即时通信,qq,wx,送礼物)：\n"),a("ul",[a("li",[t._v("长连接有一个最好的好处是"),a("strong",[t._v("建立连接后双方可以通信")]),t._v("（服务器可以直接发送文件到客户端）；")]),t._v(" "),a("li",[t._v("当服务器"),a("strong",[t._v("监听到对应的模块发生变化")]),t._v("时，会生成"),a("strong",[t._v("两个文件.json（manifest 文件）和.js 文件（update chunk）")]),t._v("；")]),t._v(" "),a("li",[t._v("通过长连接，可以直接"),a("strong",[t._v("将这两个文件主动发送给客户端")]),t._v("（浏览器）；")]),t._v(" "),a("li",[t._v("浏览器"),a("strong",[t._v("拿到两个新的文件")]),t._v("后，通过 HMR runtime 机制，"),a("strong",[t._v("加载这两个文件")]),t._v("，并且"),a("strong",[t._v("针对修改的模块进行更新")]),t._v("；")])])])]),t._v(" "),a("h2",{attrs:{id:"hmr-的原理图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmr-的原理图"}},[t._v("#")]),t._v(" HMR 的原理图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/frontEnd/pack/webpack/37.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"hotonly、host-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hotonly、host-配置"}},[t._v("#")]),t._v(" hotOnly、host 配置")]),t._v(" "),a("ul",[a("li",[t._v("host 设置主机地址：\n"),a("ul",[a("li",[t._v("默认值是 localhost；")]),t._v(" "),a("li",[t._v("如果希望其他地方也可以访问，可以设置为 0.0.0.0；")])])]),t._v(" "),a("li",[t._v("localhost 和 0.0.0.0 的区别：\n"),a("ul",[a("li",[t._v("localhost：本质上是一个域名，通常情况下会被解析成 127.0.0.1;")]),t._v(" "),a("li",[t._v("127.0.0.1：回环地址(Loop Back Address)，表达的意思其实是我们主机自己发出去的包，直接被自己接收;\n"),a("ul",[a("li",[t._v("正常的数据库包经常 应用层 - 传输层 - 网络层 - 数据链路层 - 物理层 ;")]),t._v(" "),a("li",[t._v("而回环地址，是在网络层直接就被获取到了，是不会经常数据链路层和物理层的;")]),t._v(" "),a("li",[t._v("比如我们监听 127.0.0.1 时，在同一个网段下的主机中，通过 ip 地址是不能访问的;")])])]),t._v(" "),a("li",[t._v("0.0.0.0：监听 IPV4 上所有的地址，再根据端口找到不同的应用程序;\n"),a("ul",[a("li",[t._v("比如我们监听 0.0.0.0 时，在同一个网段下的主机中，通过 ip 地址是可以访问的;")])])])])])]),t._v(" "),a("h2",{attrs:{id:"port、open、compress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#port、open、compress"}},[t._v("#")]),t._v(" port、open、compress")]),t._v(" "),a("ul",[a("li",[t._v("port 设置监听的端口，默认情况下是 8080")]),t._v(" "),a("li",[t._v("open 是否打开浏览器：\n"),a("ul",[a("li",[t._v("默认值是 false，设置为 true 会打开浏览器；")]),t._v(" "),a("li",[t._v("可以在配置中添加,也可以在 script 脚本中添加--open(脚本中添加的话 webpack-cli 会转换为在配置中把 open 设置为 true)")]),t._v(" "),a("li",[t._v("也可以设置为类似于 Google Chrome 等值；")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("open"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack serve --open"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("ul",[a("li",[t._v("compress 是否为静态文件开启 gzip compression：\n"),a("ul",[a("li",[t._v("默认值是 false，可以设置为 true；")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/frontEnd/pack/webpack/38.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("proxy 是我们开发中非常常用的一个配置选项，它的目的设置代理来解决跨域访问的问题：")]),t._v(" "),a("ul",[a("li",[t._v("比如我们的一个 api 请求是 http://localhost:8888，但是本地启动服务器的域名是 http://localhost:8000，这\n个时候发送网络请求就会出现跨域的问题；")]),t._v(" "),a("li",[t._v("那么我们可以将请求"),a("strong",[t._v("先发送到一个代理服务器，代理服务器和 API 服务器没有跨域的问题，就可以解决我们的跨域问题")]),t._v("了；")])])]),t._v(" "),a("li",[a("p",[t._v("如何解决跨域?")]),t._v(" "),a("p",[t._v("(开发阶段)")]),t._v(" "),a("ul",[a("li",[t._v("配置 devServer")])]),t._v(" "),a("p",[t._v("(上线阶段)")]),t._v(" "),a("ul",[a("li",[t._v("如果是 tomcat/express/koa 服务器的话就不存在跨域问题")]),t._v(" "),a("li",[t._v("可以让服务器关闭跨域")]),t._v(" "),a("li",[t._v("通过 nginx 代理")])])]),t._v(" "),a("li",[a("p",[t._v("我们可以进行如下的设置：")]),t._v(" "),a("ul",[a("li",[t._v("target：表示的是代理到的目标地址")])]),t._v(" "),a("ul",[a("li",[t._v("pathRewrite：默认情况下，我们的 /api-hy 也会被写入到 URL 中，如果希望删除，可以使用 pathRewrite；")]),t._v(" "),a("li",[t._v("secure：默认情况下不接收转发到 https 的服务器上，如果希望支持，可以设置为 false；")]),t._v(" "),a("li",[t._v("changeOrigin：它表示是否更新代理后请求的 headers 中 host 地址(一般我们都设置为 true)；")])])])]),t._v(" "),a("p",[t._v("比如:使用后端在 localhost:3000 上，可以使用它来启用代理：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:3000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("现在，对 /api/users 的请求会将请求代理到 http://localhost:3000/api/users。")]),t._v(" "),a("p",[t._v("如果不希望传递/api，则需要重写路径：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:3000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pathRewrite"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^/api"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"resolve-模块解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve-模块解析"}},[t._v("#")]),t._v(" resolve 模块解析")]),t._v(" "),a("ul",[a("li",[t._v("resolve 用于设置模块如何被解析：\n"),a("ul",[a("li",[t._v("在开发中我们会有各种各样的模块依赖，这些模块可能来自于自己编写的代码，也可能来自第三方库；")]),t._v(" "),a("li",[t._v("resolve 可以帮助 webpack 从每个 require/import 语句中，找到需要引入到合适的模块代码；")]),t._v(" "),a("li",[t._v("webpack 使用 "),a("a",{attrs:{href:"https://github.com/webpack/enhanced-resolve",target:"_blank",rel:"noopener noreferrer"}},[t._v("enhanced-resolve"),a("OutboundLink")],1),t._v(" 来解析文件路径；")])])]),t._v(" "),a("li",[t._v("webpack 能解析三种文件路径：\n"),a("ul",[a("li",[t._v("绝对路径\n"),a("ul",[a("li",[t._v("由于已经获得文件的绝对路径，因此不需要再做进一步解析")])])]),t._v(" "),a("li",[t._v("相对路径\n"),a("ul",[a("li",[t._v("在这种情况下，使用 import 或 require 的资源文件所处的目录，被认为是上下文目录；")]),t._v(" "),a("li",[t._v("在 import/require 中给定的相对路径，会拼接此上下文路径，来生成模块的绝对路径；")])])]),t._v(" "),a("li",[t._v("模块路径\n"),a("ul",[a("li",[t._v("在 resolve.modules 中指定的所有目录检索模块；\n"),a("ul",[a("li",[t._v("默认值是 'node_modules'，所以默认会从 node_modules 中查找文件；")])])]),t._v(" "),a("li",[t._v("我们可以通过设置别名的方式来替换初识模块路径，具体后面讲解 alias 的配置；")])])])])])]),t._v(" "),a("h2",{attrs:{id:"确实文件还是文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#确实文件还是文件夹"}},[t._v("#")]),t._v(" 确实文件还是文件夹")]),t._v(" "),a("ul",[a("li",[t._v("如果是一个文件：\n"),a("ul",[a("li",[t._v("如果文件具有扩展名，则直接打包文件；")]),t._v(" "),a("li",[t._v("否则，将使用 resolve.extensions 选项作为文件扩展名解析；")])])]),t._v(" "),a("li",[t._v("如果是一个文件夹：\n"),a("ul",[a("li",[t._v("会在文件夹中根据 resolve.mainFiles 配置选项中指定的文件顺序查找；\n"),a("ul",[a("li",[t._v("resolve.mainFiles 的默认值是 ['index']；")]),t._v(" "),a("li",[t._v("再根据 resolve.extensions 来解析扩展名；")])])])])])]),t._v(" "),a("h2",{attrs:{id:"extensions-和-alias-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extensions-和-alias-配置"}},[t._v("#")]),t._v(" extensions 和 alias 配置")]),t._v(" "),a("ul",[a("li",[t._v("extensions 是解析到文件时自动添加扩展名：\n"),a("ul",[a("li",[t._v("默认值是 ['.wasm', '.mjs', '.js', '.json']；")]),t._v(" "),a("li",[t._v("所以如果我们代码中想要添加加载 .vue 或者 jsx 或者 ts 等文件时，我们必须自己写上扩展名；")])])])]),t._v(" "),a("p",[t._v("如果没有配置这个的话,没有不添加 vue 的后缀名,就会报错\n"),a("img",{attrs:{src:"/frontEnd/pack/webpack/39.png",alt:""}})]),t._v(" "),a("p",[t._v("当我们配置了 extensions 的话就不会有问题了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  resolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    extensions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("另一个非常好用的功能是配置别名 alias：\n"),a("ul",[a("li",[t._v("特别是当我们项目的目录结构比较深的时候，或者一个文件的路径可能需要 ../../../这种路径片段；")]),t._v(" "),a("li",[t._v("我们可以给某些常见的路径起一个别名；")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  resolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    alias"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      js"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样我们将代码写成这样也是没有问题的")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import sum from './js/sum.js';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@/js/sum.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const { name, age, say } = require('./js/person.js');")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" say "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@/js/person.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import { element } from './js/element';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"js/element"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import App from './vue/App';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@/vue/App"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"如何区分开发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何区分开发环境"}},[t._v("#")]),t._v(" 如何区分开发环境")]),t._v(" "),a("ul",[a("li",[t._v("目前我们所有的 webpack 配置信息都是放到一个配置文件中的：webpack.config.js\n"),a("ul",[a("li",[t._v("当配置越来越多时，这个文件会变得越来越不容易维护；")]),t._v(" "),a("li",[t._v("并且某些配置是在开发环境需要使用的，某些配置是在生成环境需要使用的，当然某些配置是在开发和生成环\n境都会使用的；")]),t._v(" "),a("li",[t._v("所以，我们最好对配置进行划分，方便我们维护和管理；")])])]),t._v(" "),a("li",[t._v("那么，在启动时如何可以区分不同的配置呢？\n"),a("ul",[a("li",[t._v("方案一：编写两个不同的配置文件，开发和生成时，分别加载不同的配置文件即可；")]),t._v(" "),a("li",[t._v("方式二：使用相同的一个入口配置文件，通过设置参数来区分它们；")])])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --config ./config/webpack.build.config.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack serve --open --config ./config/webpack.dev.config"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h2",{attrs:{id:"入口文件解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入口文件解析"}},[t._v("#")]),t._v(" 入口文件解析")]),t._v(" "),a("ul",[a("li",[t._v("我们之前编写入口文件的规则是这样的：./src/index.js，但是如果我们的配置文件所在的位置变成了 config 目录，\n我们是否应该变成 ../src/index.js 呢？\n"),a("ul",[a("li",[t._v("如果我们这样编写，会发现是报错的，依然要写成 ./src/index.js；")]),t._v(" "),a("li",[t._v("这是因为入口文件其实是和另一个属性时有关的 context；")])])]),t._v(" "),a("li",[t._v("context 的作用是用于解析入口（entry point）和加载器（loader）：\n"),a("ul",[a("li",[t._v("官方说法：默认是当前路径（但是经过我测试，默认应该是 webpack 的启动目录）")]),t._v(" "),a("li",[t._v("另外推荐在配置中传入一个值；")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// context是上一层目录")]),t._v("\n  context"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/main.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// context是配置文件所在的目录")]),t._v("\n  context"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../src/main.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"区分开发和生成环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区分开发和生成环境配置"}},[t._v("#")]),t._v(" 区分开发和生成环境配置")]),t._v(" "),a("ul",[a("li",[t._v("这里我们创建三个文件：\n"),a("ul",[a("li",[t._v("webpack.public.config.js")]),t._v(" "),a("li",[t._v("webpack.dev.config.js")]),t._v(" "),a("li",[t._v("webpack.build.config.js")])])]),t._v(" "),a("li",[t._v("具体的分离代码这里不再给出，查看 GitHub 代码")])])])}),[],!1,null,null,null);s.default=e.exports}}]);